language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
      env: QT_BASE=55 CXX_COMPILER=g++-7 C_COMPILER=gcc-7 BUILD_TYPE=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7

    - os: linux
      dist: trusty
      env: QT_BASE=510 CXX_COMPILER=g++-7 C_COMPILER=gcc-7 BUILD_TYPE=Release
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
          sonarcloud:
            organization: "byunjuneseok"
            token:
              secure: "95aa8dcba866e2e162899c4b91526582e5094c63"

before_install:
  - if [ "$QT_BASE" = "55"  ]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y; fi
  - if [ "$QT_BASE" = "510" ]; then sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y; fi
  - sudo apt-get update -qq

install:
  - if [ "$QT_BASE" = "55"  ]; then sudo apt-get install -qq qt55base qt55multimedia qt55translations qt55tools ; source /opt/qt55/bin/qt55-env.sh ; export QTHOME=/opt/qt55 ; fi
  - if [ "$QT_BASE" = "510" ]; then sudo apt-get install -qq qt510base qt510multimedia qt510translations qt510tools ; source /opt/qt510/bin/qt510-env.sh ; export QTHOME=/opt/qt510 ; fi

  # cmake
  - curl -o cmake.tar.gz -O https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.tar.gz
  - mkdir /opt/cmake
  - tar -xf cmake.tar.gz -C /opt/cmake --strip-components=1
  - rm -f cmake.tar.gz
  - export PATH=/opt/cmake/bin:${PATH}

script:
  - mkdir build
  - cd build
  - cmake ..

  - make UnitTests
  - bin/UnitTests

  # Wraps the compilation with the Build Wrapper to generate configuration (used
  # later by the SonarQube Scanner) into the "bw-output" folder
  - build-wrapper-linux-x86-64 --out-dir bw-output make all
  # Execute some tests
  - make test
  # And finally run the SonarQube analysis - read the "sonar-project.properties"
  # file to see the specific configuration
  - sonar-scanner